name: 'Print a file to the job summary'
description: 'Print the specified file to the current job summary with optional syntax highlighting'
inputs:
  file-path:
    description: 'Path to the file to append to the job summary'
    required: true
  title:
    description: 'Message to print above the report'
    required: false
  code-block:
    description: 'Print the file contents in a code block'
    required: false
    default: 'false'
  language:
    description: 'Language to use for syntax highlighting when printing the file contents in a code block'
    required: false
  output-file-path:
    description: 'Override the default destination and write the output to the specified file instead'
    required: false
  fail-if-report-missing:
    description: 'The action should exit with an error status if the specified report file can not be found'
    required: false
    default: 'true'
  quiet:
    description: 'Whether to print the report to the console'
    required: false
    default: 'true'
runs:
  using: composite
  steps:
    - name: Check input file exists
      id: check-file-exists
      if: ${{ inputs.file-path != inputs.output-file-path }}
      shell: bash
      env:
        FILE: ${{ inputs.file-path }}
        FAIL_IF_FILE_MISSING: ${{ inputs.fail-if-report-missing == 'true' }}
      run: |
        if [[ -f $FILE ]]; then
          echo "file-exists=true" >> "$GITHUB_OUTPUT"
        elif $FAIL_IF_FILE_MISSING; then
          echo "::error title=Report missing::File '$FILE' has not been found"
          exit 1
        fi

    - name: Set report file path
      if: ${{ steps.check-file-exists.outputs.file-exists == 'true' }}
      shell: bash
      env:
        TEMP: ${{ runner.temp }}
      run: echo "REPORT=$TEMP/step-report-$(uuidgen)" >> "$GITHUB_ENV"
      
    - name: Generate report
      id: generate-report
      if: ${{ steps.check-file-exists.outputs.file-exists == 'true' }}
      shell: bash
      env:
        FILE: ${{ inputs.file-path }}
        TITLE: ${{ inputs.title }}
        LANGUAGE: ${{ inputs.language }}
        USE_CODE_BLOCK: ${{ inputs.code-block == 'true' || inputs.language != null }}
      run: |
        {
          [[ $TITLE ]] && echo "**$TITLE**"
          $USE_CODE_BLOCK && echo '```'"${LANGUAGE:-}"
          cat "$FILE"
          $USE_CODE_BLOCK && echo '```' || true
        } >> "$REPORT"

    - name: Write report
      if: ${{ steps.generate-report.outcome == 'success' }}
      shell: bash
      env:
        OUT_FILE: ${{ inputs.output-file-path }}
      run: |
        output_file=${OUT_FILE:-$GITHUB_STEP_SUMMARY}
        cat "$REPORT" >> "$output_file"
        echo "The result has been written to ${OUT_FILE:-the job summary}"

    - name: Log report
      if: ${{ steps.generate-report.outcome == 'success' && inputs.quiet == 'false' }}
      shell: bash
      run: cat "$REPORT"
