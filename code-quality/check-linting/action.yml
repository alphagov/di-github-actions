name: 'Check linting'
description: 'Run Prettier and/or ESLint and report results to the job summary if there are failing checks'
inputs:
  run-prettier:
    description: 'Whether to run Prettier'
    required: false
    default: 'true'
  run-eslint:
    description: 'Whether to run ESLint'
    required: false
    default: 'true'
  error-on-warnings:
    description: 'Treat warnings as errors'
    required: false
    default: 'true'
runs:
  using: composite
  steps:
    - name: Check if merge commit
      shell: bash
      env:
        EVENT: ${{ github.event_name }}
      run: |
        [[ $EVENT == pull_request ]] && merging=true && fetch_depth=2
        echo "fetch-depth=${fetch_depth:-}" >> "$GITHUB_OUTPUT"
        echo "MERGING=${merging:-false}" >> "$GITHUB_ENV"

    - name: Pull repository
      uses: actions/checkout@v3
      with:
        fetch-depth: ${{ steps.check-merge-commit.outputs.fetch-depth }}

    - name: Set up Node
      uses: actions/setup-node@v3
      with:
        cache: npm

    - name: Install linting tools
      shell: bash
      run: |
        echo "::group::Install packages"
        npm install prettier eslint
        echo "::endgroup::"

    - name: Get files to check
      if: ${{ env.MERGING == 'true' }}
      shell: bash
      run: |
        mapfile -t files < <(git diff --name-only --diff-filter=d HEAD^...HEAD)
        echo "FILES=${files[*]}" >> "$GITHUB_ENV"

    - name: Run Prettier
      if: ${{ inputs.run-prettier == 'true' && (env.FILES != null || env.MERGING == 'false') }}
      shell: bash
      env:
        OUTPUT: ${{ runner.temp }}/prettier.output
        REPORT: ${{ github.action_path }}/../../scripts/report-step-result/print-file.sh
      run: |
        echo ":: Running Prettier"
        $MERGING && read -ra files <<< "$FILES" || files=(.)
        
        npx prettier --ignore-unknown --check "${files[@]}" 2>&1 | tee "$OUTPUT" ||
          FILE=$OUTPUT TITLE=Prettier CODE_BLOCK=true $REPORT >> "$GITHUB_STEP_SUMMARY"

    - name: Run ESLint
      if: ${{ always() && inputs.run-eslint == 'true' && (env.FILES != null || env.MERGING == 'false') }}
      shell: bash
      env:
        TYPES: .jsx .js .ts
        STRICT: ${{ inputs.error-on-warnings == 'true' }}
        OUTPUT: ${{ runner.temp }}/eslint.output
        REPORT: ${{ github.action_path }}/../../scripts/report-step-result/print-file.sh
      run: |
        echo ":: Running ESLint"
        $STRICT && max_warnings="--max-warnings=0"
        $MERGING || es_files=(.)
        
        if $MERGING; then
          files="$(tr ' ' '\n' <<< "$FILES")"
          read -ra types <<< "$(tr '\n' ' ' <<< "$TYPES")"
          filetype_regex="$(IFS="|"; echo ".*\.(${types[*]##.})$")"
        
          if filtered_files="$(grep -E --regexp="$filetype_regex" <<< "$files")"; then
            mapfile -t es_files <<< "$filtered_files"
          else
            echo "No files to check"
            exit 0
          fi
        fi
        
        npx eslint "${max_warnings:-}" "${es_files[@]}" | tee "$OUTPUT" ||
          FILE=$OUTPUT TITLE=ESLint CODE_BLOCK=true $REPORT >> "$GITHUB_STEP_SUMMARY"
