name: 'Check linting'
description: 'Run Prettier and/or ESLint and report results to the job summary if there are failing checks'
inputs:
  run-prettier:
    description: 'Whether to run Prettier'
    required: false
    default: 'true'
  run-eslint:
    description: 'Whether to run ESLint'
    required: false
    default: 'true'
runs:
  using: 'composite'
  steps:
    - name: Check if merge commit
      id: check-merge-commit
      shell: bash
      env:
        EVENT: ${{ github.event_name }}
      run: |
        merging=false
        [[ $EVENT == pull_request ]] && merging=true && fetch_depth=2
        echo "fetch-depth=${fetch_depth:-}" >> "$GITHUB_OUTPUT"
        echo "merging=$merging" >> "$GITHUB_OUTPUT"

    - name: Pull repository
      uses: actions/checkout@v3
      with:
        fetch-depth: ${{ steps.check-merge-commit.outputs.fetch-depth }}

    - name: Set up Node
      uses: actions/setup-node@v3
      with:
        cache: npm

    - name: Install linting tools
      shell: bash
      run: |
        echo "::group::Install packages"
        npm install prettier eslint
        echo "::endgroup::"

    - name: Get files to check
      id: get-files
      if: ${{ steps.check-merge-commit.outputs.merging == 'true' }}
      shell: bash
      run: |
        mapfile -t files < <(git diff --name-only --diff-filter=d HEAD^...HEAD)
        echo "files=${files[*]}" >> "$GITHUB_OUTPUT"

    - name: Run Prettier
      id: run-prettier
      if: ${{ inputs.run-prettier == 'true' }}
      shell: bash
      env:
        FILES: ${{ steps.get-files.outputs.files }}
        OUTPUT_FILE: ${{ runner.temp }}/prettier.output
      run: |
        echo "::group::Run Prettier"
        read -ra files <<< "$FILES"
        
        if [[ ${#files[@]} -gt 0 ]]; then
          npx prettier --check "${files[@]}" 2>&1 | tee "$OUTPUT_FILE"
        else
          npx prettier --check . 2>&1 | tee "$OUTPUT_FILE"
        fi
        
        echo "::endgroup::"

    - name: Run ESLint
      id: run-eslint
      if: ${{ (success() || failure() && steps.run-prettier.outcome == 'failure') && inputs.run-eslint == 'true' }}
      shell: bash
      env:
        TYPES: .jsx .js .ts
        FILES: ${{ steps.get-files.outputs.files }}
        OUTPUT_FILE: ${{ runner.temp }}/eslint.output
      run: |
        echo "::group::Run ESLint"
        read -ra files <<< "$FILES"
        
        if [[ ${#files[@]} -gt 0 ]]; then
          types="$(echo -n "$TYPES" | tr ' ' '\n')"
          files="$(echo -n "$FILES" | tr ' ' '\n')"
        
          es_files="$(grep -F "$types" <<< "$files" || true)"
          
          [[ -z $es_files ]] && echo "No files to check" && exit 0
        
          read -ra es_files <<< "$es_files"
          npx eslint "${es_files[@]}" | tee "$OUTPUT_FILE"
        else
          npx eslint . | tee "$OUTPUT_FILE"
        fi
        
        echo "::endgroup::"

    - name: Write Prettier results
      id: report-prettier
      if: ${{ failure() && steps.run-prettier.outcome == 'failure' }}
      uses: alphagov/di-github-actions/report-step-result@4460b10baa63ab00496fe5f5f39495d428018a27
      with:
        file-path: ${{ runner.temp }}/prettier.output
        output-file-path: ${{ runner.temp }}/checks.report
        title: Prettier

    - name: Write ESLint results
      id: report-eslint
      if: ${{ failure() && steps.run-eslint.outcome == 'failure' }}
      uses: alphagov/di-github-actions/report-step-result@4460b10baa63ab00496fe5f5f39495d428018a27
      with:
        file-path: ${{ runner.temp }}/eslint.output
        output-file-path: ${{ runner.temp }}/checks.report
        title: ESLint

    - name: Report results
      if: ${{ failure() && (steps.report-prettier.outcome == 'success' || steps.report-eslint.outcome == 'success') }}
      uses: alphagov/di-github-actions/report-step-result@4460b10baa63ab00496fe5f5f39495d428018a27
      with:
        file-path: ${{ runner.temp }}/checks.report
        code-block: false
