name: 'Run Checkov'
description: 'Run Checkov and report results to the job summary if there are failing checks'
inputs:
  path:
    description: 'Only run checks on files matching the specified path filter'
    required: false
  skip-checks:
    description: "Checks to skip. Multiple values separated by commas, spaces or newlines"
    required: false
  skip-frameworks:
    description: "Frameworks to skip. Multiple values separated by commas, spaces or newlines"
    required: false
runs:
  using: composite
  steps:
    - name: Check if merge commit
      id: check-merge-commit
      shell: bash
      env:
        EVENT: ${{ github.event_name }}
      run: |
        merging=false
        [[ $EVENT == pull_request ]] && merging=true && fetch_depth=2
        echo "fetch-depth=${fetch_depth:-}" >> "$GITHUB_OUTPUT"
        echo "merging=$merging" >> "$GITHUB_OUTPUT"

    - name: Pull repository
      uses: actions/checkout@v3
      with:
        fetch-depth: ${{ steps.check-merge-commit.outputs.fetch-depth }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
        cache-dependency-path: ./.github/workflows
        cache: pip

    - name: Install Checkov
      run: echo "::group::pip output" && pip install checkov && echo "::endgroup::"
      shell: bash

    - name: Parse options
      id: checkov-options
      shell: bash
      env:
        SKIP_CHECKS: ${{ inputs.skip-checks }}
        SKIP_FRAMEWORKS: ${{ inputs.skip-frameworks }}
      run: |
        if [[ -n $SKIP_CHECKS ]]; then
          echo "skip-checks=--skip-check $(echo -n "$SKIP_CHECKS" | tr '\n' ' ' | tr ' ' ',')" >> "$GITHUB_OUTPUT"
        fi
        
        if [[ -n $SKIP_FRAMEWORKS ]]; then
          echo "skip-frameworks=--skip-framework $(echo -n "$SKIP_FRAMEWORKS" | tr '\n' ',' | tr ',' ' ')" >> "$GITHUB_OUTPUT"
        fi

    - name: Get pull request files
      id: get-pr-files
      if: ${{ steps.check-merge-commit.outputs.merging == 'true' }}
      shell: bash
      env:
        DIR: ${{ inputs.path }}
      run: |
        files=$(git diff --name-only --diff-filter=d HEAD^...HEAD)
        
        [[ -z $DIR ]] || files=$(grep -E --regexp="^.*\/${DIR}\/.*$" <<< "$files") ||
          (status=$? && [[ $status -eq 1 ]] && echo "No files to check" || exit $status) && exit
        
        echo "files=$(tr '\n' ' ' <<< "$files")" >> "$GITHUB_OUTPUT"

    - name: Run Checkov on a pull request
      if: ${{ steps.check-merge-commit.outputs.merging == 'true' && steps.get-pr-files.outputs.files != null }}
      shell: bash
      env:
        FILES: ${{ steps.get-pr-files.outputs.files }}
        SKIP_CHECKS: ${{ steps.checkov-options.outputs.skip-checks }}
        SKIP_FRAMEWORKS: ${{ steps.checkov-options.outputs.skip-frameworks }}
        OUTPUT_FILE: ${{ runner.temp }}/checkov.output
      run: |
        read -ra files <<< "$FILES"
        read -ra files <<< "${files[@]/#/-f }"
        read -ra skip_checks <<< "$SKIP_CHECKS"
        read -ra skip_frameworks <<< "$SKIP_FRAMEWORKS"
        checkov --quiet "${files[@]}" "${skip_checks[@]}" "${skip_frameworks[@]}" | tee "$OUTPUT_FILE"

    - name: Run Checkov on a directory
      if: ${{ steps.check-merge-commit.outputs.merging == 'false' && inputs.path != null }}
      shell: bash
      env:
        DIR: ${{ inputs.path }}
        SKIP_CHECKS: ${{ steps.checkov-options.outputs.skip-checks }}
        SKIP_FRAMEWORKS: ${{ steps.checkov-options.outputs.skip-frameworks }}
        OUTPUT_FILE: ${{ runner.temp }}/checkov.output
      run: |
        read -ra skip_checks <<< "$SKIP_CHECKS"
        read -ra skip_frameworks <<< "$SKIP_FRAMEWORKS"
        checkov --quiet -d "$DIR" "${skip_checks[@]}" "${skip_frameworks[@]}" | tee "$OUTPUT_FILE"

    - name: Run Checkov on the repo
      if: ${{ steps.check-merge-commit.outputs.merging == 'false' && inputs.path == null }}
      shell: bash
      env:
        SKIP_CHECKS: ${{ steps.checkov-options.outputs.skip-checks }}
        SKIP_FRAMEWORKS: ${{ steps.checkov-options.outputs.skip-frameworks }}
        OUTPUT_FILE: ${{ runner.temp }}/checkov.output
      run: |
        read -ra skip_checks <<< "$SKIP_CHECKS"
        read -ra skip_frameworks <<< "$SKIP_FRAMEWORKS"
        checkov --quiet -d . "${skip_checks[@]}" "${skip_frameworks[@]}" | tee -a "$OUTPUT_FILE"
        [[ -d .github ]] && checkov --quiet -d .github "${skip_checks[@]}" "${skip_frameworks[@]}" | tee -a "$OUTPUT_FILE"

    - name: Report Checkov result
      if: ${{ failure() }}
      shell: bash
      env:
        REPORT: ${{ github.action_path }}/../../scripts/report-step-result/print-file.sh
        FILE: ${{ runner.temp }}/checkov.output
        CODE_BLOCK: 'true'
      run: $REPORT >> "$GITHUB_STEP_SUMMARY"
