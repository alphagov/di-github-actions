name: "Run pre-commit"
description: "Run pre-commit and report results to the job summary if there are failing hooks"
inputs:
  all-files:
    description: "Run hooks on all files in the repo when running on a PR; default behaviour when running on a branch"
    required: false
    default: "false"
  args:
    description: "Extra arguments to pass to the pre-commit program"
    required: false
runs:
  using: composite
  steps:
    - name: Check if merge commit
      id: check-merge-commit
      shell: bash
      env:
        EVENT: ${{ github.event_name }}
        ALL_FILES: ${{ inputs.all-files == 'true' }}
      run: |
        if [[ $EVENT == pull_request ]]; then
          $ALL_FILES || files="--from-ref HEAD^ --to-ref HEAD"
          fetch_depth=2
        fi
        
        echo "fetch-depth=${fetch_depth:-}" >> "$GITHUB_OUTPUT"
        echo "files=${files:---all-files}" >> "$GITHUB_OUTPUT"

    - name: Pull repository
      uses: actions/checkout@v3
      with:
        fetch-depth: ${{ steps.check-merge-commit.outputs.fetch-depth }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.x
        cache-dependency-path: ./.github/workflows
        cache: pip

    - name: Install pre-commit
      run: echo "::group::pip output" && pip install pre-commit && echo "::endgroup::"
      shell: bash

    - name: Run pre-commit
      shell: bash
      env:
        ARGS: ${{ steps.check-merge-commit.outputs.files }} ${{ inputs.args }}
        OUTPUT_FILE: ${{ runner.temp }}/pre-commit.output
      run: |
        read -ra args < <(xargs <<< "$ARGS")
        pre-commit run --show-diff-on-failure --color=always "${args[@]}" ||
          (git restore . && pre-commit run --show-diff-on-failure --color=never "${args[@]}" >> "$OUTPUT_FILE")

    - name: Report pre-commit result
      if: ${{ failure() }}
      shell: bash
      env:
        REPORT: ${{ github.action_path }}/../../scripts/report-step-result/print-file.sh
        FILE: ${{ runner.temp }}/pre-commit.output
        CODE_BLOCK: "true"
      run: $REPORT >> "$GITHUB_STEP_SUMMARY"
