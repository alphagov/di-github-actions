name: 'Check SAM stacks exist'
description: 'Checks whether the specified AWS SAM stack exists using the AWS credentials configured in the job'
inputs:
  stack-names:
    description: 'Names of the stacks to check (space or newline-delimited string)'
    required: true
  set-env-var:
    description: "Name of the environment variable to set in the job with the value of the existing stacks"
    required: false
  verbose:
    description: 'Print the list of existing stacks to the job summary'
    required: false
    default: 'false'
outputs:
  existing-stacks:
    description: 'Names of the stacks confirmed to exist (space-delimited string)'
    value: ${{ steps.check-stacks-exist.outputs.existing-stacks }}
runs:
  using: composite
  steps:
    - name: Check stacks exist
      id: check-stacks-exist
      shell: bash
      env:
        STACK_NAMES: ${{ inputs.stack-names }}
        CHECK_STACKS: ${{ github.action_path }}/../../scripts/aws/ecr/check-stacks-exist.sh
      run: |
        declare -A stacks && eval "stacks=($($CHECK_STACKS))"
        echo "existing-stacks=${stacks[existing-stacks]}" >> "$GITHUB_OUTPUT"
        echo "missing-stacks=${stacks[missing-stacks]}" >> "$GITHUB_OUTPUT"

    - name: Set environment variable
      if: ${{ inputs.set-env-var != null && steps.check-stacks-exist.outputs.existing-stacks != null }}
      shell: bash
      env:
        ENV_VAR: ${{ inputs.set-env-var }}
        EXISTING_STACKS: ${{ steps.check-stacks-exist.outputs.existing-stacks }}
      run: |
        echo "Setting environment variable '$ENV_VAR'..."
        echo "$ENV_VAR=$EXISTING_STACKS" >> "$GITHUB_ENV"

    - name: Report results
      if: ${{ join(steps.check-stacks-exist.outputs.*, '') != null }}
      shell: bash
      env:
        EXISTING_STACKS: ${{ steps.check-stacks-exist.outputs.existing-stacks }}
        MISSING_STACKS: ${{ steps.check-stacks-exist.outputs.missing-stacks }}
        REPORT: ${{ github.action_path }}/../../scripts/report-step-result/print-list.sh
        VERBOSE: ${{ inputs.verbose == 'true' }}
      run: |
        $VERBOSE && step_summary=$GITHUB_STEP_SUMMARY
        
        [[ -z $EXISTING_STACKS ]] ||
          VALUES=$EXISTING_STACKS MESSAGE="Existing stacks" SINGLE_MESSAGE="Stack %s exists" $REPORT |
          tee "${step_summary:-}"
        
        [[ -z $MISSING_STACKS ]] ||
          VALUES=$MISSING_STACKS MESSAGE="Non-existent stacks" SINGLE_MESSAGE="Stack %s does not exist" $REPORT |
          tee "${step_summary:-}"
