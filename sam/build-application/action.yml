name: "Build an AWS SAM application"
description: "Validates and builds the specified SAM application. The built artifact is found in the .aws-sam directory"
inputs:
  aws-region:
    description: "AWS region to use when validating the template"
    required: false
    default: eu-west-2
  template:
    description: "Path of the SAM template file to use"
    required: false
  base-dir:
    description: "Resolve relative paths to lambda functions' source code with respect to this folder"
    required: false
  artifact-name:
    description: "Name of the artifact to upload"
    required: false
  additional-artifact-paths:
    description: "Additional paths to include in the artifact apart from the application"
    required: false
  upload-artifact:
    description: "Whether to upload a GitHub Actions artifact"
    required: false
    default: "true"
  enable-beta-features:
    description: "Use SAM beta features when building an application"
    required: false
    default: "false"
  cache-key:
    description: "Key to use for caching SAM dependencies. Caching is disabled if the key is not provided."
    required: false
  disable-parallel:
    description: "Set to true to build the resources sequentially"
    required: false
    default: "false"
  pull-repository:
    description: "Whether to pull the repository before building"
    required: false
    default: "false"
outputs:
  artifact-name:
    description: "Pass through the artifact name"
    value: ${{ inputs.artifact-name }}
runs:
  using: composite
  steps:
    - name: Pull repository
      if: ${{ inputs.pull-repository == 'true' }}
      uses: actions/checkout@v3

    - name: Validate SAM template
      shell: bash
      env:
        AWS_REGION: ${{ inputs.aws-region }}
        TEMPLATE: ${{ inputs.template }}
        VALIDATE: ${{ github.action_path }}/../../scripts/aws/sam/validate-template.sh
      run: $VALIDATE

    - name: Cache SAM dependencies
      if: ${{ inputs.cache-key != null }}
      uses: actions/cache@v3
      with:
        key: ${{ runner.os }}-sam-${{ inputs.cache-key }}-${{ hashFiles('**/package-lock.json', inputs.template) }}
        restore-keys: ${{ runner.os }}-sam-${{ inputs.cache-key }}-
        path: |
          .aws-sam
          !.aws-sam/build

    - name: Build SAM Application
      shell: bash
      env:
        TEMPLATE_FILE: ${{ inputs.template }}
        BETA_FEATURES: ${{ inputs.enable-beta-features == 'true' }}
        PARALLEL: ${{ inputs.disable-parallel == 'false' }}
        CACHE: ${{ inputs.cache-key != 'null' }}
        BASE_DIR: ${{ inputs.base-dir }}
      run: |
        sam build \
          ${TEMPLATE_FILE:+--template-file "$TEMPLATE_FILE"} \
          ${BASE_DIR:+--base-dir "$BASE_DIR"} \
          "$($PARALLEL && echo "--parallel")" \
          "$($CACHE && echo "--cached" || echo "--no-cached")" \
          "$($BETA_FEATURES && echo "--beta-features")"

    - name: Archive SAM distribution artifact
      if: ${{ inputs.upload-artifact && inputs.artifact-name != null }}
      uses: actions/upload-artifact@v3
      with:
        name: ${{ inputs.artifact-name }}
        retention-days: 3
        path: |
          .aws-sam/build
          ${{ inputs.additional-artifact-paths }}
