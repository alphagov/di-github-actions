name: 'Get stale stacks'
description: 'Retrieve names of AWS SAM stacks older than a set threshold, and filtered by name and tags'
inputs:
  threshold-days:
    description: 'Get stacks older than the specified number of days'
    required: false
    default: '30'
  stack-name-filter:
    description: 'Only retrieve stacks whose names contain the specified string'
    required: false
  stack-tag-filters:
    description: 'Filter stacks by tags, encoded as name=value pairs separated by newlines or "|"'
    required: true
  env-var-name:
    description: 'Accumulate stack names in the environment variable with the specified name, persisted in the job'
    required: false
  description:
    description: 'Description of the stale stacks - for logging purposes only'
    required: false
outputs:
  stack-names:
    description: 'Filtered stack names'
    value: ${{ steps.filter-stacks.outputs.stack-names }}
runs:
  using: composite
  steps:
    - name: Parse tag filters
      id: parse-tag-filters
      shell: bash
      env:
        PARAMETERS: ${{ inputs.stack-tag-filters }}
        ASSOCIATIVE_ARRAY: 'true'
        SCRIPT: ${{ github.action_path }}/../../scripts/parse-parameters.sh
      run: echo "tag-filters=$($SCRIPT)" >> "$GITHUB_OUTPUT"

    - name: Filter stacks
      id: filter-stacks
      run: ${{ github.action_path }}/filter-stacks.sh
      shell: bash
      env:
        THRESHOLD_DAYS: ${{ inputs.threshold-days }}
        STACK_NAME_FILTER: ${{ inputs.stack-name-filter }}
        STACK_TAG_FILTERS: ${{ steps.parse-tag-filters.outputs.tag-filters }}
        ENV_VAR_NAME: ${{ inputs.env-var-name }}

    - name: Report stacks found
      if: ${{ steps.filter-stacks.outputs.stack-names != null }}
      shell: bash
      env:
        DESCRIPTION: ${{ inputs.description }}
        VALUES: ${{ steps.filter-stacks.outputs.stack-names }}
        SCRIPT: ${{ github.action_path }}/../../scripts/report-step-result/print-list.sh
      run: MESSAGE="Stale ${description:+$description }stacks" $SCRIPT | tee "$GITHUB_STEP_SUMMARY"

    - name: Report no stacks found
      if: ${{ steps.filter-stacks.outputs.stack-names == null }}
      shell: bash
      env:
        DESCRIPTION: ${{ inputs.description }}
      run: echo "There are no stale ${DESCRIPTION:+$DESCRIPTION }stacks" | tee "$GITHUB_STEP_SUMMARY"
