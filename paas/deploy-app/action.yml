name: 'Deploy to PaaS'
description: 'Deploy an application to PaaS using the Cloud Foundry client'
inputs:
  cf-org-name:
    description: 'The target organisation in PaaS'
    required: true
  cf-space-name:
    description: 'The target CF space in PaaS'
    required: true
  cf-username:
    description: 'The CF username of the PaaS account used to deploy the app'
    required: true
  cf-password:
    description: 'The PaaS account password'
    required: true
  app-name:
    description: 'The name of the deployed app. Overrides the name in the manifest and the one derived from branch name'
    required: false
  app-name-prefix:
    description: 'Derive the app name from the branch name and use the provided prefix'
    required: false
  variables:
    description: 'key=value pairs for variable substitution in the manifest, separated by newlines or "|"'
    required: false
  url:
    description: 'The PaaS deployment URL. Overrides the default <app-name>.london.cloudapps.digital URL'
    required: false
  rolling-deployment:
    description: 'Whether to use the rolling strategy when deploying'
    required: false
    default: 'false'
  instances:
    description: 'Number of app instances to deploy'
    required: false
    default: '1'
outputs:
  deployment-url:
    description: 'The PaaS deployment URL'
    value: ${{ steps.set-deployment-url.outputs.deployment-url }}
runs:
  using: 'composite'
  steps:
    - name: Auth to PaaS
      uses: alphagov/di-github-actions/paas/log-in-to-paas@5d1ae55ce54ef9c127090d0be477c58f3a3e32dd
      with:
        cf-org-name: ${{ inputs.cf-org-name }}
        cf-space-name: ${{ inputs.cf-space-name }}
        cf-username: ${{ inputs.cf-username }}
        cf-password: ${{ inputs.cf-password }}

    - name: Parse variables
      id: parse-variables
      uses: alphagov/di-github-actions/parse-parameters@5d1ae55ce54ef9c127090d0be477c58f3a3e32dd
      with:
        parameters: ${{ inputs.variables }}
        associative-array: true

    - name: Create variables file
      shell: bash
      env:
        VARS_FILE: ${{ runner.temp }}/variables.yaml
        VARS: ${{ steps.parse-variables.outputs.parsed-parameters }}
      run: |
        declare -A variables
        eval "variables=(${VARS})"        
        for variable in "${!variables[@]}"; do
          echo "$variable: ${variables[$variable]}" >> "$VARS_FILE"
        done

    - name: Set deployment hostname
      id: set-deployment-hostname
      if: ${{ inputs.app-name == null && inputs.app-name-prefix != null }}
      uses: alphagov/di-github-actions/beautify-branch-name@5d1ae55ce54ef9c127090d0be477c58f3a3e32dd
      with:
        downcase: true
        length-limit: 63
        underscores-to-hyphens: true
        prefix: ${{ inputs.app-name-prefix }}
        usage: App name

    - name: Set app name
      id: set-app-name
      shell: bash
      env:
        APP_NAME: ${{ steps.set-deployment-hostname.outputs.pretty-branch-name || inputs.app-name }}
      run: echo "app-name=$APP_NAME" >> "$GITHUB_OUTPUT"

    - name: Set deployment URL
      if: ${{ inputs.url != null || steps.set-app-name.outputs.app-name != null }}
      id: set-deployment-url
      shell: bash
      env:
        URL: ${{ inputs.url }}
        HOSTNAME: ${{ steps.set-app-name.outputs.app-name }}
      run: echo "deployment-url=${URL:-https://${HOSTNAME}.london.cloudapps.digital}" >> "$GITHUB_OUTPUT"

    - name: Push to PaaS
      shell: bash
      env:
        ROLLING_DEPLOYMENT: ${{ inputs.rolling-deployment == 'true' }}
        APP_NAME: ${{ steps.set-app-name.outputs.app-name }}
        VARS_FILE: ${{ runner.temp }}/variables.yaml
        INSTANCES: ${{ inputs.instances }}
      run: |
        cf push "${APP_NAME:-}" \
          $($ROLLING_DEPLOYMENT && echo "--strategy rolling") \
          --instances "$INSTANCES" \
          --vars-file "$VARS_FILE"
