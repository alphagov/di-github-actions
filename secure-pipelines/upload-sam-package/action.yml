name: "Upload SAM package to secure pipelines"
description: "Upload a SAM application package to an S3 bucket for deployment with secure pipelines"
inputs:
  aws-role-arn:
    description: "ARN of AWS role to assume when uploading the package to S3"
    required: false
  aws-region:
    description: "AWS region to use"
    required: false
    default: eu-west-2
  artifact-bucket-name:
    description: "The name of the bucket to upload the SAM artifact to"
    required: true
  signing-profile-name:
    description: "The name of the profile to use for code signing"
    required: true
  artifact-name:
    description: "Name of the artifact containing the built SAM application"
    required: false
  template:
    description: "Filepath of the SAM application template"
    required: false
    default: template.yaml
  pull-repository:
    description: "Pull the repository before uploading the package"
    required: false
    default: "true"
  working-directory:
    description: "The working directory containing the SAM app"
    required: false
  force-upload:
    description: "Upload a new package even if the artifact for the git SHA is already present in the S3 bucket"
    required: false
outputs:
  artifact-version:
    description: "Version ID of the uploaded artifact"
    value: ${{ steps.get-uploaded-version.outputs.artifact-version || check-artifact-exists.outputs.artifact-version }}
  upload-timestamp:
    description: "If the artifact has been uploaded, the timestamp it was last modified"
    value: ${{ steps.get-uploaded-version.outputs.artifact-timestamp }}
runs:
  using: composite
  steps:
    - name: Assume AWS Role
      if: ${{ inputs.aws-role-arn != null }}
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ inputs.aws-role-arn }}
        aws-region: ${{ inputs.aws-region }}

    - name: Check artifact exists
      if: ${{ inputs.force-upload != 'true' }}
      id: check-artifact-exists
      shell: bash
      env:
        ERROR_STATUS: "false"
        ARTIFACT_BUCKET: ${{ inputs.artifact-bucket-name }}
        GET_VERSION: ${{ github.action_path }}/../../scripts/secure-pipelines/get-artifact-version.sh
      run: $GET_VERSION

    - name: Pull repository
      if: ${{ steps.check-artifact-exists.outputs.artifact-version == null inputs.pull-repository == 'true' }}
      uses: actions/checkout@v3

    - name: Validate SAM template
      if: ${{ steps.check-artifact-exists.outputs.artifact-version == null }}
      shell: bash
      env:
        TEMPLATE: ${{ inputs.template }}
        AWS_REGION: ${{ inputs.aws-region }}
        VALIDATE: ${{ github.action_path }}/../../scripts/aws/sam/validate-template.sh
      run: $VALIDATE

    - name: Get distribution artifact
      if: ${{ steps.check-artifact-exists.outputs.artifact-version == null && inputs.artifact-name != null }}
      uses: actions/download-artifact@v3
      with:
        name: ${{ inputs.artifact-name }}

    - name: Upload package
      if: ${{ steps.check-artifact-exists.outputs.artifact-version == null }}
      uses: alphagov/di-devplatform-upload-action@v3.3
      with:
        signing-profile-name: ${{ inputs.signing-profile-name }}
        artifact-bucket-name: ${{ inputs.artifact-bucket-name }}
        working-directory: ${{ inputs.working-directory }}
        template-file: ${{ inputs.template }}

    - name: Get artifact version
      if: ${{ steps.check-artifact-exists.outputs.artifact-version == null }}
      id: get-uploaded-version
      shell: bash
      env:
        ARTIFACT_BUCKET: ${{ inputs.artifact-bucket-name }}
        GET_VERSION: ${{ github.action_path }}/../../scripts/secure-pipelines/get-artifact-version.sh
      run: $GET_VERSION
