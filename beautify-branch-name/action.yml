name: "Beautify branch name"
description: "Modify the branch name to be usable in deployment and host names"
inputs:
  branch-name:
    description: "Override the branch name to transform"
    required: false
  downcase:
    description: "Whether to downcase all letters in the branch name"
    required: false
    default: "true"
  underscores-to-hyphens:
    description: "Whether to replace all underscores with hyphens"
    required: false
    default: "true"
  length-limit:
    description: "Maximum length of the modified string"
    required: false
    default: "200"
  prefix:
    description: "'prefix-' will be prepended to the returned string. Included in the length limit"
    required: false
  set-env-var:
    description: "Name of the environment variable to set in the job with the value of the modified branch name"
    required: false
  usage:
    description: "The purpose for which the transformed name is used - for logging purposes only"
    required: false
  verbose:
    description: "Print a message to the step summary"
    required: false
    default: "true"
outputs:
  pretty-branch-name:
    description: 'Beautified branch name'
    value: ${{ steps.transform-branch-name.outputs.pretty-branch-name }}
runs:
  using: composite
  steps:
    - name: Transform branch name
      id: transform-branch-name
      shell: bash
      env:
        BRANCH_NAME: ${{ inputs.branch-name }}
        DOWNCASE: ${{ inputs.downcase == 'true' }}
        LENGTH_LIMIT: ${{ inputs.length-limit }}
        REPLACE_UNDERSCORES: ${{ inputs.underscores-to-hyphens == 'true' }}
        PREFIX: ${{ inputs.prefix }}
        MESSAGE: ${{ inputs.usage }}
        QUIET: ${{ inputs.verbose == 'false' }}
        TRANSFORM: ${{ github.action_path }}/../scripts/transform-branch-name.sh
      run: |
        echo "Transforming $BRANCH_NAME..."
        pretty_branch_name=$($TRANSFORM)
        echo "pretty-branch-name=$pretty_branch_name" >> "$GITHUB_OUTPUT"
        $QUIET || echo "${MESSAGE:-Pretty branch name}: \`$pretty_branch_name\`" | tee "$GITHUB_STEP_SUMMARY"

    - name: Set environment variable
      if: ${{ inputs.set-env-var != null }}
      shell: bash
      env:
        ENV_VAR: ${{ inputs.set-env-var }}
        BRANCH_NAME: ${{ steps.transform-branch-name.outputs.pretty-branch-name }}
      run: |
        echo "Setting environment variable '$ENV_VAR'..."
        echo "$ENV_VAR=$BRANCH_NAME" >> "$GITHUB_ENV"
